<?php

namespace app\controllers;

use Yii;
use yii\filters\AccessControl;
use app\filters\AccessRule;
use app\models\AmbilBeasiswa;
use app\models\AmbilBeasiswaSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;
use app\models\Rekening;
use app\models\Pendidikan;
use app\models\Beasiswa;
use yii\helpers\Json;
use yii\db\Query;
use yii\data\ActiveDataProvider;
use kartik\mpdf\Pdf;


/**
 * AmbilBeasiswaController implements the CRUD actions for AmbilBeasiswa model.
 */
class AmbilBeasiswaController extends Controller
{
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
        'access'=>[
                'class'=>AccessControl::className(),
                'rules'=>[
                    [
                        'actions'=>[
                            'create',
                        ],
                        'allow'=>true,
                        'matchCallback'=>function(){
                            return (
                                Yii::$app->user->identity->role->can_admin == 1
                            );
                        },
                    ],
                    [
                        'actions'=>[
                            'index',
                            'update',
                            'delete',
                            'view',
                            'v',
                            'lap',
                        ],
                        'allow'=>true,
                        'matchCallback'=>function(){
                            return (
                                Yii::$app->user->identity->role->can_admin == 1 || Yii::$app->user->identity->role->can_admin == 3
                            );
                        },
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

      public function actionPend() {
        $out = [];
        if (isset($_POST['depdrop_parents'])) {
            $parents = $_POST['depdrop_parents'];
            if ($parents != null) {
                $id_peserta = $parents[0];
                $out = Pendidikan::getPend($id_peserta);            
                echo Json::encode(['output' => $out, 'selected' => '']);
                return;
            }
        }
        echo Json::encode(['output' => '', 'selected' => '']);
    }
      public function actionRek() 
      {
        $out1 = [];
        if (isset($_POST['depdrop_parents'])) {
            $parents = $_POST['depdrop_parents'];
            if ($parents != null) {
                $id_peserta = $parents[0];
                $out1 = Rekening::getRek($id_peserta);
                echo Json::encode(['output' => $out1, 'selected' => '']);
                return;
            }
        }
        echo Json::encode(['output' => '', 'selected' => '']);
    }

    public function actionBea() 
      {
        $out2 = [];
        if (isset($_POST['depdrop_parents'])) {
            $parents = $_POST['depdrop_parents'];
            if ($parents != null) {
                $id_pddkn = $parents[0];
                $out2 = Beasiswa::getBea($id_pddkn);
                echo Json::encode(['output' => $out2, 'selected' => '']);
                return;
            }
        }
        echo Json::encode(['output' => '', 'selected' => '']);
    }


    /**
     * Lists all AmbilBeasiswa models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new AmbilBeasiswaSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    public function actionLap()
    {
        $model = new AmbilBeasiswa();
        return $this->render('form', [
            'model' => $model]);
    }

    public function actionV()
    {
        $pdf = new Pdf([
        'mode' => Pdf::MODE_CORE, // leaner size using standard fonts
        'format' => Pdf::FORMAT_A4,
        'options' => [
            'title' => 'Laporan Ambil Beasiswa',
            'subject' => 'Laporan Ambil Beasiswa'
        ],
        'methods' => [
            'SetHeader' => ['Generated By: Krajee Pdf Component||Generated On: ' . date("r")],
            'SetFooter' => ['|Page {PAGENO}|'],
        ]
    ]);
        $tgl = Yii::$app->request->post();
        $model = new AmbilBeasiswa();

        $query = new Query();
        if ($model->load(Yii::$app->request->post())) {
        $query = $model::find()
            ->joinWith(['idPeserta','idPddkn','noRekening','beasiswa0'])
            ->where(['tgl' => $tgl])
            ->orderBy('id_pddkn ASC');
        
        $dataProvider = new ActiveDataProvider([
            'query' => $query,     
            ]);
        $model = $dataProvider->getModels();

        $content =  $this->render('laporan', [
            'model' => $model,
            'dataProvider' => $dataProvider,
        ]);

        $mpdf = $pdf->api;
        $mpdf->WriteHtml($content);
        return $pdf->render();
        }

    }

    /**
     * Displays a single AmbilBeasiswa model.
     * @param string $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new AmbilBeasiswa model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new AmbilBeasiswa();

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->code_trans]);
        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Updates an existing AmbilBeasiswa model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param string $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);

        if ($model->load(Yii::$app->request->post()) && $model->save()) {
            return $this->redirect(['view', 'id' => $model->code_trans]);
        } else {
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing AmbilBeasiswa model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param string $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $this->findModel($id)->delete();

        return $this->redirect(['index']);
    }

    /**
     * Finds the AmbilBeasiswa model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param string $id
     * @return AmbilBeasiswa the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = AmbilBeasiswa::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
